{"ast":null,"code":"import axios from 'axios';\nimport { getUserToken } from \"./Auth-util\"; // Adjust the import path based on your project structure\n\nconst NotesApiBackend = axios.create({\n  baseURL: `https://notes-app-backend-3i2z.onrender.com`\n  // baseURL: `http://localhost:3000`\n});\nNotesApiBackend.interceptors.request.use(config => {\n  const token = getUserToken();\n  if (token) {\n    config.headers = {\n      Authorization: `Bearer ${token}`\n    };\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default NotesApiBackend;","map":{"version":3,"names":["axios","getUserToken","NotesApiBackend","create","baseURL","interceptors","request","use","config","token","headers","Authorization","error","Promise","reject"],"sources":["C:/Users/Ritik kumar/OneDrive - Lovely Professional University/Documents/Note.me/client/src/apis/Notes-api.js"],"sourcesContent":["import axios from 'axios';\nimport { getUserToken } from \"./Auth-util\";  // Adjust the import path based on your project structure\n\nconst NotesApiBackend = axios.create({\n    baseURL: `https://notes-app-backend-3i2z.onrender.com`\n    // baseURL: `http://localhost:3000`\n});\n\nNotesApiBackend.interceptors.request.use((config) => {\n    const token = getUserToken();\n    if (token) {\n        config.headers = { Authorization: `Bearer ${token}` };\n    }\n    return config;\n}, (error) => {\n    return Promise.reject(error);\n});\n\nexport default NotesApiBackend;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,aAAa,CAAC,CAAE;;AAE7C,MAAMC,eAAe,GAAGF,KAAK,CAACG,MAAM,CAAC;EACjCC,OAAO,EAAE;EACT;AACJ,CAAC,CAAC;AAEFF,eAAe,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACjD,MAAMC,KAAK,GAAGR,YAAY,CAAC,CAAC;EAC5B,IAAIQ,KAAK,EAAE;IACPD,MAAM,CAACE,OAAO,GAAG;MAAEC,aAAa,EAAE,UAAUF,KAAK;IAAG,CAAC;EACzD;EACA,OAAOD,MAAM;AACjB,CAAC,EAAGI,KAAK,IAAK;EACV,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;AAEF,eAAeV,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}