{"ast":null,"code":"export function addToLocalStorage(key, value) {\n  if (typeof value === \"object\") {\n    localStorage.setItem(key, JSON.stringify(value));\n  } else {\n    localStorage.setItem(key, value);\n  }\n}\nexport function getFromLocalStorage(key) {\n  let value = localStorage.getItem(key);\n  if (!value) {\n    return null;\n  }\n  try {\n    return JSON.parse(value);\n  } catch (error) {\n    return value;\n  }\n}\nexport function updateLocalStorage(key, updatedValue) {\n  let value = localStorage.getItem(key);\n  if (!value) {\n    return null;\n  }\n  try {\n    localStorage.setItem(key, updatedValue);\n  } catch (error) {\n    return value;\n  }\n}\nexport function removeFromLocalStorage(key) {\n  localStorage.removeItem(key);\n}\nconst method = {\n  addToLocalStorage,\n  getFromLocalStorage,\n  updateLocalStorage,\n  removeFromLocalStorage\n};\nexport default method;","map":{"version":3,"names":["addToLocalStorage","key","value","localStorage","setItem","JSON","stringify","getFromLocalStorage","getItem","parse","error","updateLocalStorage","updatedValue","removeFromLocalStorage","removeItem","method"],"sources":["C:/Users/Ritik kumar/Downloads/Note.me-main/Note.me/client/src/utils/localstorage.js"],"sourcesContent":["export function addToLocalStorage(key, value) {\r\n  if (typeof value === \"object\") {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } else {\r\n    localStorage.setItem(key, value);\r\n  }\r\n}\r\n\r\nexport function getFromLocalStorage(key) {\r\n  let value = localStorage.getItem(key);\r\n  if (!value) {\r\n    return null;\r\n  }\r\n  try {\r\n    return JSON.parse(value);\r\n  } catch (error) {\r\n    return value;\r\n  }\r\n}\r\n\r\nexport function updateLocalStorage(key, updatedValue) {\r\n  let value = localStorage.getItem(key);\r\n  if (!value) {\r\n    return null;\r\n  }\r\n  try {\r\n    localStorage.setItem(key, updatedValue);\r\n  } catch (error) {\r\n    return value;\r\n  }\r\n}\r\n\r\nexport function removeFromLocalStorage(key) {\r\n  localStorage.removeItem(key);\r\n}\r\n\r\nconst method = {\r\n  addToLocalStorage,\r\n  getFromLocalStorage,\r\n  updateLocalStorage,\r\n  removeFromLocalStorage,\r\n};\r\n\r\n\r\nexport default method;"],"mappings":"AAAA,OAAO,SAASA,iBAAiBA,CAACC,GAAG,EAAEC,KAAK,EAAE;EAC5C,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7BC,YAAY,CAACC,OAAO,CAACH,GAAG,EAAEI,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC,CAAC;EAClD,CAAC,MAAM;IACLC,YAAY,CAACC,OAAO,CAACH,GAAG,EAAEC,KAAK,CAAC;EAClC;AACF;AAEA,OAAO,SAASK,mBAAmBA,CAACN,GAAG,EAAE;EACvC,IAAIC,KAAK,GAAGC,YAAY,CAACK,OAAO,CAACP,GAAG,CAAC;EACrC,IAAI,CAACC,KAAK,EAAE;IACV,OAAO,IAAI;EACb;EACA,IAAI;IACF,OAAOG,IAAI,CAACI,KAAK,CAACP,KAAK,CAAC;EAC1B,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACd,OAAOR,KAAK;EACd;AACF;AAEA,OAAO,SAASS,kBAAkBA,CAACV,GAAG,EAAEW,YAAY,EAAE;EACpD,IAAIV,KAAK,GAAGC,YAAY,CAACK,OAAO,CAACP,GAAG,CAAC;EACrC,IAAI,CAACC,KAAK,EAAE;IACV,OAAO,IAAI;EACb;EACA,IAAI;IACFC,YAAY,CAACC,OAAO,CAACH,GAAG,EAAEW,YAAY,CAAC;EACzC,CAAC,CAAC,OAAOF,KAAK,EAAE;IACd,OAAOR,KAAK;EACd;AACF;AAEA,OAAO,SAASW,sBAAsBA,CAACZ,GAAG,EAAE;EAC1CE,YAAY,CAACW,UAAU,CAACb,GAAG,CAAC;AAC9B;AAEA,MAAMc,MAAM,GAAG;EACbf,iBAAiB;EACjBO,mBAAmB;EACnBI,kBAAkB;EAClBE;AACF,CAAC;AAGD,eAAeE,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}