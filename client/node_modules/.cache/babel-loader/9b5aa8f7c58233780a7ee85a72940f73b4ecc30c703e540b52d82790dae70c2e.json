{"ast":null,"code":"// import { logInUser, signUp } from \"./user-Api\";\n// import NotesApiBackend from \"./Notes-api\";\n// import axios from \"axios\";\n\n// const getLocalStorageUser = () => {\n//     return JSON.parse(localStorage.getItem(\"id\"));\n// }\n\n// const setUser = (user) => {\n//     localStorage.setItem(\"id\", JSON.stringify(user));\n// }\n\n// const loginUserFunction = async ({email, password}) => {\n//     const user = await logInUser({email, password});\n//     setUser(user._id);\n//     return user;\n// }\n\n// const SignupUser = async (userData) => {\n//     const user = await signUp(userData);\n//     return user;\n// }\n// const GoogleloginUser = async (userData) => {\n\n//     const response = await axios.get(`https://oauth2.googleapis.com/tokeninfo?id_token=${userData}`);\n//     const { email } = response.data;\n//     console.log(email);\n//     const user = await NotesApiBackend.post(\"/user/googlelogin\", {email})\n//     setUser(user.data._id);\n//     return user;\n\n// };\n\n// export { \n//     loginUserFunction as loginUser,\n//     SignupUser,\n//     getLocalStorageUser,\n//     GoogleloginUser,\n// };\n\nimport { logInUser, signUp } from \"./user-Api\";\nimport NotesApiBackend from \"./Notes-api\";\nimport axios from \"axios\";\n\n// Helper function to get the user ID from local storage\n\nconst getUserToken = () => {\n  return localStorage.getItem(\"token\");\n};\nexport { getUserToken };\nconst getLocalStorageUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\n\n// Helper function to set the user ID in local storage\nconst setUser = data => {\n  localStorage.setItem(\"user\", JSON.stringify(data.user));\n  localStorage.setItem(\"token\", data.token);\n};\n\n// Function to log in a user with email and password\nconst loginUserFunction = async ({\n  email,\n  password\n}) => {\n  const data = await logInUser({\n    email,\n    password\n  });\n  setUser(data);\n  return data.user;\n};\n\n// Function to sign up a new user\nconst SignupUser = async userData => {\n  const data = await signUp(userData);\n  setUser(data);\n  return data.user;\n};\n\n// Function to log in a user using Google OAuth\n_c = SignupUser;\nconst GoogleloginUser = async idToken => {\n  const response = await axios.get(`https://oauth2.googleapis.com/tokeninfo?id_token=${idToken}`);\n  const {\n    email\n  } = response.data;\n  const {\n    data\n  } = await NotesApiBackend.post(\"/googlelogin\", {\n    email\n  });\n  setUser(data);\n  return data.user;\n};\n\n// Exporting the functions\n_c2 = GoogleloginUser;\nexport { loginUserFunction as loginUser, SignupUser, getLocalStorageUser, GoogleloginUser };\nvar _c, _c2;\n$RefreshReg$(_c, \"SignupUser\");\n$RefreshReg$(_c2, \"GoogleloginUser\");","map":{"version":3,"names":["logInUser","signUp","NotesApiBackend","axios","getUserToken","localStorage","getItem","getLocalStorageUser","JSON","parse","setUser","data","setItem","stringify","user","token","loginUserFunction","email","password","SignupUser","userData","_c","GoogleloginUser","idToken","response","get","post","_c2","loginUser","$RefreshReg$"],"sources":["C:/Users/Ritik kumar/OneDrive - Lovely Professional University/Documents/Note.me/client/src/apis/Auth-util.js"],"sourcesContent":["// import { logInUser, signUp } from \"./user-Api\";\n// import NotesApiBackend from \"./Notes-api\";\n// import axios from \"axios\";\n\n// const getLocalStorageUser = () => {\n//     return JSON.parse(localStorage.getItem(\"id\"));\n// }\n\n// const setUser = (user) => {\n//     localStorage.setItem(\"id\", JSON.stringify(user));\n// }\n\n// const loginUserFunction = async ({email, password}) => {\n//     const user = await logInUser({email, password});\n//     setUser(user._id);\n//     return user;\n// }\n\n// const SignupUser = async (userData) => {\n//     const user = await signUp(userData);\n//     return user;\n// }\n// const GoogleloginUser = async (userData) => {\n\n//     const response = await axios.get(`https://oauth2.googleapis.com/tokeninfo?id_token=${userData}`);\n//     const { email } = response.data;\n//     console.log(email);\n//     const user = await NotesApiBackend.post(\"/user/googlelogin\", {email})\n//     setUser(user.data._id);\n//     return user;\n\n// };\n\n// export { \n//     loginUserFunction as loginUser,\n//     SignupUser,\n//     getLocalStorageUser,\n//     GoogleloginUser,\n// };\n\n\nimport { logInUser, signUp } from \"./user-Api\";\nimport NotesApiBackend from \"./Notes-api\";\nimport axios from \"axios\";\n\n// Helper function to get the user ID from local storage\n\nconst getUserToken = () => {\n    return localStorage.getItem(\"token\");\n};\n\nexport { getUserToken };\n\nconst getLocalStorageUser = () => {\n    return JSON.parse(localStorage.getItem(\"user\"));\n}\n\n// Helper function to set the user ID in local storage\nconst setUser = (data) => {\n    localStorage.setItem(\"user\", JSON.stringify(data.user));\n    localStorage.setItem(\"token\", data.token);\n}\n\n// Function to log in a user with email and password\nconst loginUserFunction = async ({ email, password }) => {\n    const data = await logInUser({ email, password });\n    setUser(data);\n    return data.user;\n}\n\n// Function to sign up a new user\nconst SignupUser = async (userData) => {\n    const data = await signUp(userData);\n    setUser(data);\n    return data.user;\n}\n\n// Function to log in a user using Google OAuth\nconst GoogleloginUser = async (idToken) => {\n    const response = await axios.get(`https://oauth2.googleapis.com/tokeninfo?id_token=${idToken}`);\n    const { email } = response.data;\n    const { data } = await NotesApiBackend.post(\"/googlelogin\", { email });\n    setUser(data);\n    return data.user;\n};\n\n// Exporting the functions\nexport { \n    loginUserFunction as loginUser,\n    SignupUser,\n    getLocalStorageUser,\n    GoogleloginUser,\n};\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASA,SAAS,EAAEC,MAAM,QAAQ,YAAY;AAC9C,OAAOC,eAAe,MAAM,aAAa;AACzC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;AAEA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACxC,CAAC;AAED,SAASF,YAAY;AAErB,MAAMG,mBAAmB,GAAGA,CAAA,KAAM;EAC9B,OAAOC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;AACnD,CAAC;;AAED;AACA,MAAMI,OAAO,GAAIC,IAAI,IAAK;EACtBN,YAAY,CAACO,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACF,IAAI,CAACG,IAAI,CAAC,CAAC;EACvDT,YAAY,CAACO,OAAO,CAAC,OAAO,EAAED,IAAI,CAACI,KAAK,CAAC;AAC7C,CAAC;;AAED;AACA,MAAMC,iBAAiB,GAAG,MAAAA,CAAO;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACrD,MAAMP,IAAI,GAAG,MAAMX,SAAS,CAAC;IAAEiB,KAAK;IAAEC;EAAS,CAAC,CAAC;EACjDR,OAAO,CAACC,IAAI,CAAC;EACb,OAAOA,IAAI,CAACG,IAAI;AACpB,CAAC;;AAED;AACA,MAAMK,UAAU,GAAG,MAAOC,QAAQ,IAAK;EACnC,MAAMT,IAAI,GAAG,MAAMV,MAAM,CAACmB,QAAQ,CAAC;EACnCV,OAAO,CAACC,IAAI,CAAC;EACb,OAAOA,IAAI,CAACG,IAAI;AACpB,CAAC;;AAED;AAAAO,EAAA,GANMF,UAAU;AAOhB,MAAMG,eAAe,GAAG,MAAOC,OAAO,IAAK;EACvC,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,oDAAoDF,OAAO,EAAE,CAAC;EAC/F,MAAM;IAAEN;EAAM,CAAC,GAAGO,QAAQ,CAACb,IAAI;EAC/B,MAAM;IAAEA;EAAK,CAAC,GAAG,MAAMT,eAAe,CAACwB,IAAI,CAAC,cAAc,EAAE;IAAET;EAAM,CAAC,CAAC;EACtEP,OAAO,CAACC,IAAI,CAAC;EACb,OAAOA,IAAI,CAACG,IAAI;AACpB,CAAC;;AAED;AAAAa,GAAA,GARML,eAAe;AASrB,SACIN,iBAAiB,IAAIY,SAAS,EAC9BT,UAAU,EACVZ,mBAAmB,EACnBe,eAAe;AACjB,IAAAD,EAAA,EAAAM,GAAA;AAAAE,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}