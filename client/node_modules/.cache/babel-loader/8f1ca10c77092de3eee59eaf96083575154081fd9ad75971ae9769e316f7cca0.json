{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ritik kumar\\\\Downloads\\\\Note.me-main\\\\Note.me\\\\client\\\\src\\\\pages\\\\login\\\\partials\\\\signup.js\",\n  _s = $RefreshSig$();\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport React, { createContext, useState } from \"react\";\nimport Input from \"../../../components/atoms/input\";\nimport Button from \"../../../components/atoms/button\";\nimport styles from \"./partials.module.scss\";\nimport Signin from \"./signin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Username = /*#__PURE__*/createContext();\nconst Signup = props => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSignup = () => {\n    if (!email.length || !name.length || !password.length) toast.error(\"some required fields are empty\");\n    fetch(\"http://localhost:8080/api/users/signup\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        name\n      }),\n      method: \"POST\"\n    }).then(res => res.json()).then(data => {\n      if ((data === null || data === void 0 ? void 0 : data.success) === 201) {\n        toast.success(\"user registered successfully!\");\n        props.handleSwitch();\n        navigate(\"/notes\");\n      } else {\n        toast.error(data === null || data === void 0 ? void 0 : data.message);\n      }\n    }).catch(err => {\n      console.log(err);\n      toast.error(\"user registration failed!\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Username.Provider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        text: \"Join with Google\",\n        icon: \"ri:google-fill\",\n        className: styles.google\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.option,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"or join with email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Full Name\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Email address\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Join with Email\",\n        icon: \"material-symbols:login\",\n        className: styles.emailbtn,\n        handleClick: handleSignup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"p0nf794IfH61gMSIhC9GkQ/WZwk=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["toast","useNavigate","React","createContext","useState","Input","Button","styles","Signin","jsxDEV","_jsxDEV","Username","Signup","props","_s","email","setEmail","name","setName","password","setPassword","navigate","handleSignup","length","error","fetch","headers","body","JSON","stringify","method","then","res","json","data","success","handleSwitch","message","catch","err","console","log","Provider","children","className","form","text","icon","google","fileName","_jsxFileName","lineNumber","columnNumber","option","value","onChange","e","target","placeholder","type","emailbtn","handleClick","_c","$RefreshReg$"],"sources":["C:/Users/Ritik kumar/Downloads/Note.me-main/Note.me/client/src/pages/login/partials/signup.js"],"sourcesContent":["import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport React, { createContext, useState } from \"react\";\r\n\r\nimport Input from \"../../../components/atoms/input\";\r\nimport Button from \"../../../components/atoms/button\";\r\nimport styles from \"./partials.module.scss\";\r\nimport Signin from \"./signin\";\r\n\r\n  const Username=createContext()\r\n\r\nconst Signup=(props)=> {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSignup = () => {\r\n    if (!email.length || !name.length || !password.length)\r\n      toast.error(\"some required fields are empty\");\r\n\r\n    fetch(\"http://localhost:8080/api/users/signup\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n        name,\r\n      }),\r\n      method: \"POST\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data?.success === 201) {\r\n          toast.success(\"user registered successfully!\");\r\n          props.handleSwitch();\r\n          navigate(\"/notes\");\r\n        } else {\r\n          toast.error(data?.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast.error(\"user registration failed!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Username.Provider>\r\n    <div className={styles.form}>\r\n      <Button\r\n        text={\"Join with Google\"}\r\n        icon={\"ri:google-fill\"}\r\n        className={styles.google}\r\n      />\r\n      <div className={styles.option}>\r\n        <span>or join with email address</span>\r\n      </div>\r\n      <article>\r\n        <Input\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          placeholder={\"Full Name\"}\r\n          type={\"text\"}\r\n        />\r\n        <br />\r\n        <Input\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder={\"Email address\"}\r\n          type={\"email\"}\r\n        />\r\n        <br />\r\n        <Input\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder={\"Password\"}\r\n          type={\"password\"}\r\n        />\r\n      </article>\r\n      <Button\r\n        text={\"Join with Email\"}\r\n        icon={\"material-symbols:login\"}\r\n        className={styles.emailbtn}\r\n        handleClick={handleSignup}\r\n      />\r\n      \r\n      \r\n    </div>\r\n    </Username.Provider>\r\n    \r\n  );\r\n}\r\n\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}