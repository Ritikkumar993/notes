{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ritik kumar\\\\OneDrive - Lovely Professional University\\\\Documents\\\\Note.me\\\\client\\\\src\\\\components\\\\cards\\\\note\\\\index.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import styles from \"./note.module.scss\";\n// import { formatDate } from \"../../../utils/formateDtae\";\n\n// function Note(props) {\n//   const { text, date, color } = props;\n//   const [expand, setExpand] = useState(false);\n//   const [noteText, setNoteText] = useState(\"\");\n//   return (\n//     <article className={styles.container} style={{ backgroundColor: color }}>\n//       {/* <p>\n//                 This is how a Note on Note.me looks like! \n//                 Very simple, clean and asthetic! üòç\n//                 </p> */}\n//       <div className={`${styles.content}`}>\n//         {!text.length ? (\n//           <textarea\n//             value={noteText}\n//             onChange={(e) => setNoteText(e.target.value)}\n//           className={styles.textArea}/>\n//         ) : (\n//           <>\n//             <p className={expand ? styles.expanded : \"\"}>{text}</p>\n//             {text.length > 154 ? (\n//               <button onClick={() => setExpand((prev) => !prev)}>\n//                 read {expand ? \"less\" : \"more\"}\n//               </button>\n//             ) : null}\n//           </>\n//         )}\n//       </div>\n\n//       <footer className={styles.footer}>\n//         {/* July, 07 2024 */}\n//         {formatDate(date)}\n//       </footer>\n//     </article>\n//   );\n// }\n\n// export default Note;\n\nimport React, { useState } from \"react\";\nimport styles from \"./note.module.scss\";\nimport { Icon } from \"@iconify/react/dist/iconify.js\";\nimport { deleteTask } from \"../../../apis/task-api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Note(props) {\n  _s();\n  const {\n    task,\n    color\n  } = props;\n  const [expand, setExpand] = useState(false);\n  const handleDeleteTask = async () => {\n    try {\n      console.log('Attempting to delete task with ID:', task._id);\n      const result = await deleteTask(task._id);\n      console.log('Task deleted:', result);\n      // Handle successful deletion (e.g., update state, show a message)\n      // You might want to call a function passed as a prop to update the parent component's state\n      if (props.onDelete) {\n        props.onDelete(task._id);\n      }\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      // Handle error (e.g., show error message to user)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: styles.container,\n    style: {\n      backgroundColor: color\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.content}`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: expand ? styles.expanded : \"\",\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), task.description.length > 154 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setExpand(prev => !prev),\n        children: [\"read \", expand ? \"less\" : \"more\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: styles.footer,\n      children: [task.createdAt, /*#__PURE__*/_jsxDEV(Icon, {\n        onClick: handleDeleteTask,\n        icon: \"material-symbols:delete-outline\",\n        style: {\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(Note, \"V8NQrAFSLXwZu43JmcjJwSuHwmw=\");\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useState","styles","Icon","deleteTask","jsxDEV","_jsxDEV","Note","props","_s","task","color","expand","setExpand","handleDeleteTask","console","log","_id","result","onDelete","error","className","container","style","backgroundColor","children","content","expanded","description","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","prev","footer","createdAt","icon","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Ritik kumar/OneDrive - Lovely Professional University/Documents/Note.me/client/src/components/cards/note/index.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import styles from \"./note.module.scss\";\n// import { formatDate } from \"../../../utils/formateDtae\";\n\n// function Note(props) {\n//   const { text, date, color } = props;\n//   const [expand, setExpand] = useState(false);\n//   const [noteText, setNoteText] = useState(\"\");\n//   return (\n//     <article className={styles.container} style={{ backgroundColor: color }}>\n//       {/* <p>\n//                 This is how a Note on Note.me looks like! \n//                 Very simple, clean and asthetic! üòç\n//                 </p> */}\n//       <div className={`${styles.content}`}>\n//         {!text.length ? (\n//           <textarea\n//             value={noteText}\n//             onChange={(e) => setNoteText(e.target.value)}\n//           className={styles.textArea}/>\n//         ) : (\n//           <>\n//             <p className={expand ? styles.expanded : \"\"}>{text}</p>\n//             {text.length > 154 ? (\n//               <button onClick={() => setExpand((prev) => !prev)}>\n//                 read {expand ? \"less\" : \"more\"}\n//               </button>\n//             ) : null}\n//           </>\n//         )}\n//       </div>\n\n//       <footer className={styles.footer}>\n//         {/* July, 07 2024 */}\n//         {formatDate(date)}\n//       </footer>\n//     </article>\n//   );\n// }\n\n// export default Note;\n\nimport React, {useState} from \"react\";\nimport styles from \"./note.module.scss\";\nimport { Icon } from \"@iconify/react/dist/iconify.js\";\nimport { deleteTask } from \"../../../apis/task-api\";\n\nfunction Note(props) {\n  const { task, color } = props;\n  const [expand, setExpand] = useState(false);\n\n  const handleDeleteTask = async () => {\n    try {\n      console.log('Attempting to delete task with ID:', task._id);\n      const result = await deleteTask(task._id);\n      console.log('Task deleted:', result);\n      // Handle successful deletion (e.g., update state, show a message)\n      // You might want to call a function passed as a prop to update the parent component's state\n      if (props.onDelete) {\n        props.onDelete(task._id);\n      }\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      // Handle error (e.g., show error message to user)\n    }\n  }\n\n  return (\n    <article className={styles.container} style={{ backgroundColor: color }}>\n      <div className={`${styles.content}`}>\n        <p className={expand ? styles.expanded : \"\"}>{task.description}</p>\n        {task.description.length > 154 ? (\n          <button onClick={() => setExpand((prev) => !prev)}>\n            read {expand ? \"less\" : \"more\"}\n          </button>\n        ) : null}\n      </div>\n      <footer className={styles.footer}>\n        {task.createdAt} \n        <Icon \n          onClick={handleDeleteTask} \n          icon={\"material-symbols:delete-outline\"}\n          style={{ cursor: 'pointer' }}\n        />\n      </footer>\n    </article>\n  );\n}\n\nexport default Note;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}