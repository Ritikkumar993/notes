{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ritik kumar\\\\OneDrive - Lovely Professional University\\\\Documents\\\\Note.me\\\\client\\\\src\\\\components\\\\contextProvider\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { API_URL } from \"../../config/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const response = await fetch(`${API_URL}/auth/verify`, {\n        credentials: \"include\"\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n        setIsAuthenticated(true);\n      } else {\n        setIsAuthenticated(false);\n      }\n    } catch (error) {\n      console.error(\"Auth check failed:\", error);\n      setIsAuthenticated(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (username, password) => {\n    console.log(API_URL);\n    try {\n      const response = await fetch(`${API_URL}/auth/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        }),\n        credentials: \"include\"\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n        setIsAuthenticated(true);\n        return {\n          success: true\n        };\n      } else {\n        const errorData = await response.json();\n        return {\n          success: false,\n          error: errorData.error\n        };\n      }\n    } catch (error) {\n      console.error(\"Registration failed:\", error);\n      return {\n        success: false,\n        error: \"An error occurred during registration\"\n      };\n    }\n  };\n  const login = async (username, password) => {\n    console.log(API_URL);\n    try {\n      const response = await fetch(`${API_URL}/auth/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        }),\n        credentials: \"include\"\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n        setIsAuthenticated(true);\n        return {\n          success: true\n        };\n      } else {\n        const errorData = await response.json();\n        return {\n          success: false,\n          error: errorData.error\n        };\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      return {\n        success: false,\n        error: \"An error occurred during login\"\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await fetch(`${API_URL}/auth/logout`, {\n        method: \"POST\",\n        credentials: \"include\"\n      });\n      setUser(null);\n      setIsAuthenticated(false);\n    } catch (error) {\n      console.error(\"Logout failed:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      isAuthenticated,\n      register,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","API_URL","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","checkAuthStatus","response","fetch","credentials","ok","userData","json","error","console","register","username","password","log","method","headers","body","JSON","stringify","success","errorData","login","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Ritik kumar/OneDrive - Lovely Professional University/Documents/Note.me/client/src/components/contextProvider/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from \"react\";\n\nimport {API_URL} from \"../../config/config\"\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      const response = await fetch(`${API_URL}/auth/verify`, {\n        credentials: \"include\",\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n        setIsAuthenticated(true);\n      } else {\n        setIsAuthenticated(false);\n      }\n    } catch (error) {\n      console.error(\"Auth check failed:\", error);\n      setIsAuthenticated(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (username, password) => {\n    console.log(API_URL)\n    try {\n      const response = await fetch(`${API_URL}/auth/register`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username, password }),\n        credentials: \"include\",\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n        setIsAuthenticated(true);\n        return { success: true };\n      } else {\n        const errorData = await response.json();\n        return { success: false, error: errorData.error };\n      }\n    } catch (error) {\n      console.error(\"Registration failed:\", error);\n      return { success: false, error: \"An error occurred during registration\" };\n    }\n  };\n\n  const login = async (username, password) => {\n    console.log(API_URL)\n    try {\n      const response = await fetch(`${API_URL}/auth/login`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username, password }),\n        credentials: \"include\",\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n        setIsAuthenticated(true);\n        return { success: true };\n      } else {\n        const errorData = await response.json();\n        return { success: false, error: errorData.error };\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      return { success: false, error: \"An error occurred during login\" };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await fetch(`${API_URL}/auth/logout`, {\n        method: \"POST\",\n        credentials: \"include\",\n      });\n      setUser(null);\n      setIsAuthenticated(false);\n    } catch (error) {\n      console.error(\"Logout failed:\", error);\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{ user, loading, isAuthenticated, register, login, logout }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}