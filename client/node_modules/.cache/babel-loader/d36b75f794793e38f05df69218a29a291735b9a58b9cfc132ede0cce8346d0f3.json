{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ritik kumar\\\\OneDrive - Lovely Professional University\\\\Documents\\\\Note.me\\\\client\\\\src\\\\components\\\\cards\\\\full-note\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"./fullnote.module.scss\";\nimport { Icon } from \"@iconify/react/dist/iconify.js\";\nimport { formatDate } from \"../../../utils/formatDate\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { atomDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { useNotes } from \"../../contextProvider/NotesContext\";\nimport Markdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FullNote() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    selectedNote,\n    getNoteById\n  } = useNotes();\n  const [note, setNote] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchNote = async () => {\n      try {\n        const response = await getNoteById(id);\n        setNote(response);\n      } catch (error) {\n        console.error('Error fetching note:', error);\n        // Handle error (e.g., show error message to user)\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchNote();\n  }, [id, selectedNote, getNoteById, setNote]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      style: {\n        backgroundColor: note.color\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.options,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.info,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: note.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatDate(note.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/edit-note/${id}`,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: \"fa-regular:edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Markdown, {\n        remarkPlugins: [remarkGfm],\n        children: note.content,\n        components: {\n          code(props) {\n            const {\n              children,\n              className,\n              node,\n              ...rest\n            } = props;\n            const match = /language-(\\w+)/.exec(className || \"\");\n            return match ? /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n              ...rest,\n              PreTag: \"div\",\n              children: String(children).replace(/\\n$/, \"\"),\n              language: match[1],\n              style: atomDark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"code\", {\n              ...rest,\n              className: className,\n              children: children\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(FullNote, \"NDgeXpxaQKXUPvwivJvkC6MUoNQ=\", false, function () {\n  return [useNotes, useParams];\n});\n_c = FullNote;\nexport default FullNote;\nvar _c;\n$RefreshReg$(_c, \"FullNote\");","map":{"version":3,"names":["React","useEffect","useState","styles","Icon","formatDate","Link","useParams","Prism","SyntaxHighlighter","atomDark","useNotes","Markdown","remarkGfm","jsxDEV","_jsxDEV","FullNote","_s","isLoading","setIsLoading","selectedNote","getNoteById","note","setNote","id","fetchNote","response","error","console","fileName","_jsxFileName","lineNumber","columnNumber","className","container","children","content","style","backgroundColor","color","options","info","title","createdAt","to","icon","remarkPlugins","components","code","props","node","rest","match","exec","PreTag","String","replace","language","_c","$RefreshReg$"],"sources":["C:/Users/Ritik kumar/OneDrive - Lovely Professional University/Documents/Note.me/client/src/components/cards/full-note/index.js"],"sourcesContent":["import React, { useEffect, useState} from \"react\";\n\nimport styles from \"./fullnote.module.scss\";\nimport { Icon } from \"@iconify/react/dist/iconify.js\";\nimport { formatDate } from \"../../../utils/formatDate\";\nimport { Link,useParams } from \"react-router-dom\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { atomDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { useNotes } from \"../../contextProvider/NotesContext\";\nimport Markdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\nfunction FullNote() {\n  const [isLoading, setIsLoading] = useState(true);\n  const { selectedNote, getNoteById} = useNotes();\n  const [note, setNote] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchNote = async () => {\n      try {\n        const response = await getNoteById(id);\n        setNote(response);\n      } catch (error) {\n        console.error('Error fetching note:', error);\n        // Handle error (e.g., show error message to user)\n      }finally{\n        setIsLoading(false);\n      }\n      \n    };\n\n      fetchNote();\n  }, [id, selectedNote, getNoteById, setNote]);\n\n\n  if (isLoading) {\n    return <div></div>;\n  }\n\n  return (\n    <article className={styles.container}>\n      <div\n        className={styles.content}\n        style={{ backgroundColor: note.color }}\n      >\n        <div className={styles.options}>\n          <div className={styles.info}>\n            <h1>{note.title}</h1>\n            <span>{formatDate(note.createdAt)}</span>\n          </div>\n          <Link to={`/edit-note/${id}`} >\n            <Icon icon={\"fa-regular:edit\"} />\n          </Link>\n        </div>\n\n        <Markdown\n          remarkPlugins={[remarkGfm]}\n          children={note.content}\n          components={{\n            code(props) {\n              const { children, className, node, ...rest } = props;\n              const match = /language-(\\w+)/.exec(className || \"\");\n              return match ? (\n                <SyntaxHighlighter\n                  {...rest}\n                  PreTag=\"div\"\n                  children={String(children).replace(/\\n$/, \"\")}\n                  language={match[1]}\n                  style={atomDark}\n                />\n              ) : (\n                <code {...rest} className={className}>\n                  {children}\n                </code>\n              );\n            },\n          }}\n        />\n      </div>\n    </article>\n  );\n}\n\nexport default FullNote;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}